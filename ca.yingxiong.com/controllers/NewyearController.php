<?php
/**
 * Created by PhpStorm.
 * User: lin.zhou
 * Date: 2019/1/22 0022
 * Time: 14:48
 */

namespace app\controllers;


use common\Cms;
use common\components\HomeController;
use common\models\GiftCode;
use common\models\UserCenter;
use common\models\UserCenterData;

class NewyearController extends HomeController
{
    CONST START_TIME = '2019-01-24 00:00:00';  // 开始时间
    CONST END_TIME = '2019-04-30 23:59:59';    // 结束时间
    CONST SCENE = 1;    // 用户场景
    CONST TOTAL_NUM = 3;    // 用户总共可抽奖次数
    CONST SESSION_LOGIN_PHONE = 'login_phone';  // 登录
    CONST LOCK_NAME = 'cover_lottery';  // 加锁

    public $giftIdsPrize = [
        459 => ['id' => 459, 'prize' => '幻舞QBZ95', 'v' => 5, 'num' => 3],
        460 => ['id' => 460, 'prize' => '八卦手雷+C级手雷伤害零件*5', 'v' => 5, 'num' => 3],
        461 => ['id' => 461, 'prize' => '英雄之光（3天）+步枪弹匣（3天）+强化点*88W', 'v' => 50, 'num' => 20],
        462 => ['id' => 462, 'prize' => '熊猫挂饰', 'v' => 90, 'num' => 50],
        463 => ['id' => 463, 'prize' => '疾风骑士碎片*2+黑暗骑士碎片*2', 'v' => 100, 'num' => 100],
        464 => ['id' => 464, 'prize' => '强化点10W+荣誉5000', 'v' => 200, 'num' => 3000],
        465 => ['id' => 465, 'prize' => '强化点*8W', 'v' => 200, 'num' => 5000],
        0 => ['id' => 0, 'prize' => '谢谢参与', 'v' => 350, 'num' => 0],
    ];

    public $userData = [
        'gift_log' => [],   // 中奖记录
        'total_num' => self::TOTAL_NUM,   // 总共的抽奖次数
        'consume_num'   => 0,   // 已经使用的次数
    ];

    public function beforeAction($action)
    {
        if (!YII_DEV) {
            if (time() < strtotime(self::START_TIME)) {
//                $this->echoJson(1001);
            }
            if (time() > strtotime(self::END_TIME)) {
                $this->echoJson(1002);
            }
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 登录
     */
    public function actionLogin()
    {
        $phone = Cms::getPostValue('phone');
        if (!$phone || !Cms::checkPhone($phone)) {
            $this->echoJson(1003);
        }
        $check = Cms::checkVerify(0);
        if ($check['status'] != 0) {
            $this->echoJson(1004);
        }
        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE);
        if (!$user) {
            $user = UserCenter::addUser($this->website_id, $phone, '', self::SCENE);
            $userData = [
                'total_num' => self::TOTAL_NUM,
            ];
            UserCenterData::setData($this->website_id, $user['id'], $userData);
        } else {
            $userData = UserCenterData::getUserData($this->website_id, $user['id']);
        }
        $userData = array_merge($this->userData, $userData);
        $userData['residue_num'] = $this->_getResidueNum($userData);
        $userData['phone'] = $phone;
        Cms::setSession(self::SESSION_LOGIN_PHONE, $phone);
        $this->echoJson(0, '', $userData);
    }

    private function _getResidueNum($userData)
    {
        $userData['total_num'] = isset($userData['total_num']) ? $userData['total_num'] : 0;
        $userData['consume_num'] = isset($userData['consume_num']) ? $userData['consume_num'] : 0;
        $num = $userData['total_num'] - $userData['consume_num'];
        return $num <= 0 ? 0 : $num;
    }

    /**
     * 获取用户信息
     */
    public function actionGetUserInfo()
    {
        list($user, $userData) = $this->_checkLogin();
        $userData['residue_num'] = $this->_getResidueNum($userData);
        $userData['phone'] = $user['phone'];
        $this->echoJson(0, '', $userData);
    }

    /**
     * 注销
     */
    public function actionLogout()
    {
        Cms::setSession(self::SESSION_LOGIN_PHONE, '');
        $this->echoJson(0);
    }

    /**
     * 抽奖
     */
    public function actionLottery()
    {
        list($user, $userData) = $this->_checkLogin();
        $residueNum = $this->_getResidueNum($userData);
        if ($residueNum <= 0) {
            $this->echoJson(1005);
        }

        if (!Cms::checkLock($this->website_id, self::LOCK_NAME, $user['phone'])) {
            $this->echoJson(1006);
        }
        $giftIdsPrize = $this->giftIdsPrize;
        if (isset($userData['gift_log'])) {
            foreach ($userData['gift_log'] as $v) {
                unset($giftIdsPrize[$v['gift_id']]);
            }
        }
        $giftId = Cms::getPrizeId($giftIdsPrize);
        $code = '';
        if ($giftId != 0) {
            list($code, $giftCodeLogId) = GiftCode::getGiftCodeByPhone($this->website_id, $giftId, $user['phone'], true);
            if (!$code) {
                $giftId = 0;
            }
        }
        $userData['consume_num'] = isset($userData['consume_num']) ? $userData['consume_num'] : 0;
        $userData['consume_num'] = $userData['consume_num'] + 1;
        if ($giftId) {
            $userData['gift_log'][] = [
                'gift_id' => $giftId,
                'code' => $code,
            ];
        }
        UserCenterData::setData($this->website_id, $user['id'], $userData);

        Cms::clearLock($this->website_id, self::LOCK_NAME, $user['phone']);
        $this->echoJson(0, '', ['gift_id' => $giftId, 'code' => $code]);
    }

    /**
     * @return array
     */
    private function _checkLogin()
    {
        $phone = Cms::getSession(self::SESSION_LOGIN_PHONE);
        if (!$phone) {
            $this->echoJson(1);
        }
        $user = UserCenter::getUserInfo($this->website_id, $phone, self::SCENE);
        if (!$user) {
            $this->echoJson(1);
        }
        $userData = UserCenterData::getUserData($this->website_id, $user['id']);
        return [$user, $userData];
    }
}