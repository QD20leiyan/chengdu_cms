<?php
/**
 * 预约活动
 * Created by PhpStorm.
 * User: lin.zhou
 * Date: 2018/10/10 0010
 * Time: 11:30
 */

namespace app\controllers;


use common\Cms;
use common\components\PcController;
use common\models\GiftCode;
use common\models\UserCenter;
use common\models\UserCenterData;
use common\models\YuyueStatModel;
use yii\helpers\Json;

class YyController extends PcController
{
    const SCENE_YUYUE = 1;
    const SESSION_LOGIN_NAME = 'nba_yuyue';
    const YUYUE_NUM_NAME = 'nba_total';
    const YUYUE_GIFT_NUM = 50001;    // 预约人数礼包可领取条件
    const GIFT_YUYUE = 378; // 预约人数礼包
    const GIFT_INVITE = 379; // 邀请礼包

    public $data = [
        'inviteUser' => [],
        'giftCodeYuyue' => '',
        'giftCodeInvite' => '',
    ];

    public function beforeAction($action, $isNoLayout = 0)
    {
        header('Location:http://cdnstatic.yingxiong.com/common/jqqd/index1.html');
        exit;
        return parent::beforeAction($action, $isNoLayout); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        return $this->renderPartial("index.html");
    }

    /**
     * 受邀请页
     * @return false|string
     */
    public function actionInvite()
    {
        return $this->renderPartial("invite.html");
    }

    /**
     * 获取用户信息
     */
    public function actionGetUserInfo()
    {
        $this->_checkLogin();
        $phone = Cms::getSession(self::SESSION_LOGIN_NAME);
        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE_YUYUE);
        $data = $this->_getUserInfo($phone, $user);
        $this->ajaxOutPut(['status' => 0, 'msg' => '', 'data' => $data]);
    }

    /**
     * 预约
     */
    public function actionYuyue()
    {
        $phone = Cms::getPostValue('phone');
        $yzm = Cms::getPostValue('yzm');
        if (!$phone || !Cms::checkPhone($phone)) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '手机号不正确']);
        }
        if (!$yzm) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '验证码不能为空']);
        }
        $res = Cms::yuyuePhone($this->website_id, $phone, "ios", self::SCENE_YUYUE, '', Cms::IS_NEED_YZM, Cms::IS_UNIQUE);
        $isRepeat = false;
        if ($res['status'] != 0) {
            if (!isset($res['is_repeat'])) {
                $this->ajaxOutPut($res);
            } else {
                $isRepeat = true;
            }

        }
        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE_YUYUE);
        if (!$user) {
            $meInviteCode = time().rand(1000, 9999);
            $user = UserCenter::addUser($this->website_id, $phone, '', self::SCENE_YUYUE, ['me_invite_code' => $meInviteCode]);
        }

        $data = $this->_getUserInfo($phone, $user);
        Cms::setSession(self::SESSION_LOGIN_NAME, $phone);
        if ($isRepeat) {
            $this->ajaxOutPut(['status' => 1, 'msg' => '您已经预约', 'data' => $data]);
        } else {
            $this->ajaxOutPut(['status' => 0, 'msg' => '预约成功', 'data' => $data]);
        }

    }

    private function _getUserInfo($phone, $user)
    {
        $userData = UserCenterData::getData($this->website_id, $user['id']);
        $userData = $userData ? $userData['data'] : [];
        $codes = [
            'code' => $user['me_invite_code'],
            'invitePhone' => $phone,
        ];

        $giftCodeLog = [];
        $giftCodeLog['yuyue'] = isset($userData['giftCodeYuyue']) ? $userData['giftCodeYuyue'] : '';
        $giftCodeLog['invite'] = isset($userData['giftCodeInvite']) ? $userData['giftCodeInvite'] : '';

        $inviteCodes = Cms::getPostValue('code', '');
        $invitePhone = '';  // 邀请人手机
        $inviteUser = [];
        if ($inviteCodes) {
            list($code, $invitePhone) = $this->_parseCode($inviteCodes);
            $inviteUser = UserCenter::getUserInfo($this->website_id, $invitePhone, '', self::SCENE_YUYUE);
            if ($inviteUser) {
                $inviteUserData = UserCenterData::getData($this->website_id, $inviteUser['id']);
                $inviteUserData = $inviteUserData ? $inviteUserData['data'] : [];
                $inviteUser = $inviteUserData && isset($inviteUserData['inviteUser']) ? $inviteUserData['inviteUser'] : [];
            }
        } else {
            $inviteUser = isset($userData['inviteUser']) ? $userData['inviteUser'] : [];
        }

        if (!empty($inviteUser)) {
            foreach ($inviteUser as $k => &$v) {
                if ($k >= 2) {
                    break;
                }
                $v = substr_replace($v, '****', 3,4);
            }
        }

        $data = [
            'shareUrl' => $this->_getInviteUrl().'code='.base64_encode(Json::encode($codes)),
            'inviteUser' => $inviteUser,
            'isAcceptInvite' => $user['other_invite_code'] ? true : false,
            'giftCodeLog' => $giftCodeLog,
            'phone' => $phone,
            'invitePhone' => $invitePhone,
        ];
        return $data;
    }

    /**
     * 获取邀请的地址
     * @return string
     */
    private function _getInviteUrl()
    {
        if (YII_DEV) {
            return "http://nba.dev.yingxiong.com/yy/invite.html?";
        } else if (YII_DEMO) {
            return "http://nba.demo.yingxiong.com/yy/invite.html?";
        } else {
            return "http://nba.yingxiong.com/yy/invite.html?";
        }
    }

    private function _checkLogin()
    {
        $phone = Cms::getSession(self::SESSION_LOGIN_NAME);

        $inviteCodes = Cms::getPostValue('code', '');
        $invitePhone = '';  // 邀请人手机
        if ($inviteCodes) {
            list($code, $invitePhone) = $this->_parseCode($inviteCodes);
        }

        if (!$phone) {
            $this->ajaxOutPut(['status' => -2, 'msg' => '请先登录', 'data' => ['invitePhone' => $invitePhone]]);
        }
    }

    private function _parseCode($codes)
    {
        $codes = base64_decode($codes);
        $codes = @json_decode($codes, true);
        if (empty($codes) || !isset($codes['code']) || !isset($codes['invitePhone']) || !$codes['invitePhone'] || !Cms::checkPhone($codes['invitePhone'])) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '邀请码不正确']);
        }
        $code = $codes['code'];
        $invitePhone = $codes['invitePhone'];
        return [$code, $invitePhone];
    }

    /**
     * 接受邀请
     */
    public function actionAcceptInvite()
    {
        $this->_checkLogin();
        $codes = Cms::getPostValue('code');
        list($code, $invitePhone) = $this->_parseCode($codes);

        $phone = Cms::getSession(self::SESSION_LOGIN_NAME);

        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE_YUYUE);
        if (!$user || $user['other_invite_code']) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '您已接受他人邀请']);
        }

        $inviteUser = UserCenter::getUserInfo($this->website_id, $invitePhone, '', self::SCENE_YUYUE);
        if (!$inviteUser) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '邀请码不正确']);
        }
        if ($inviteUser['me_invite_code'] != $code) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '邀请码不正确']);
        }
        if ($code == $user['me_invite_code']) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '自己不能邀请自己']);
        }
        $inviteUserData = UserCenterData::getData($this->website_id, $inviteUser['id']);
        $inviteData = [];
        if ($inviteUserData) {
            $inviteData  = $inviteUserData['data'];
        }
        if (!isset($inviteData['inviteUser'])) {
            $inviteData['inviteUser'] = [];
        }
        $inviteData['inviteUser'][] = $phone;
        UserCenterData::setData($this->website_id, $inviteUser['id'], $inviteData);

        UserCenter::setUserInfo($this->website_id, $phone, ['other_invite_code' => $code], '', self::SCENE_YUYUE);
        $this->ajaxOutPut(['status' => 0, 'msg' => '成功']);
    }

    /**
     * 预约人数达到条件领取礼包
     */
    public function actionGetYuyueGift()
    {
        $this->_checkLogin();
        $yuyueNum = YuyueStatModel::getYuyue($this->website_id, self::YUYUE_NUM_NAME);

        if ($yuyueNum['count'] <= self::YUYUE_GIFT_NUM) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '未达到领取条件']);
        }
        $phone = Cms::getSession(self::SESSION_LOGIN_NAME);

        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE_YUYUE);
        $data = UserCenterData::getData($this->website_id, $user['id']);
        $userData = $data ? $data['data'] : [];
        if (isset($userData['giftCodeYuyue']) && $userData['giftCodeYuyue']) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '请勿重复领取']);
        }

        list($code, $giftCodeLogId) = GiftCode::getGiftCodeOrEntity($this->website_id, self::GIFT_YUYUE, $phone, '', true, 0, true);
        if ($code) {
            $userData['giftCodeYuyue'] = $code;
            UserCenterData::setData($this->website_id, $user['id'], $userData);
        }
        $this->ajaxOutPut(['status' => 0, 'msg' => '', 'code' => $code]);
    }

    /**
     * 邀请人数达到条件领取条件
     */
    public function actionGetInviteGift()
    {
        $this->_checkLogin();
        $phone = Cms::getSession(self::SESSION_LOGIN_NAME);
        $user = UserCenter::getUserInfo($this->website_id, $phone, '', self::SCENE_YUYUE);
        $data = UserCenterData::getData($this->website_id, $user['id']);
        $userData = $data ? $data['data'] : [];
        if (count($userData['inviteUser']) < 2) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '未达到领取条件']);
        }
        if (isset($userData['giftCodeInvite']) && $userData['giftCodeInvite']) {
            $this->ajaxOutPut(['status' => -1, 'msg' => '请勿重复领取']);
        }
        list($code, $giftCodeLogId) = GiftCode::getGiftCodeOrEntity($this->website_id, self::GIFT_INVITE, $phone, '', true, 0, true);
        if ($code) {
            $userData['giftCodeInvite'] = $code;
            UserCenterData::setData($this->website_id, $user['id'], $userData);
        }
        $this->ajaxOutPut(['status' => 0, 'msg' => '', 'code' => $code]);
    }

    public function actionLogout()
    {
        Cms::setSession(self::SESSION_LOGIN_NAME, '');
        $this->ajaxOutPut(['status' => 0]);
    }
}